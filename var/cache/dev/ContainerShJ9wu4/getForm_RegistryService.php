<?php

use Symfony\Component\DependencyInjection\Argument\RewindableGenerator;
use Symfony\Component\DependencyInjection\Exception\RuntimeException;

// This file has been auto-generated by the Symfony Dependency Injection Component for internal use.
// Returns the private 'form.registry' shared service.

include_once $this->targetDirs[3].'/vendor/symfony/form/FormRegistryInterface.php';
include_once $this->targetDirs[3].'/vendor/symfony/form/FormRegistry.php';
include_once $this->targetDirs[3].'/vendor/symfony/form/FormExtensionInterface.php';
include_once $this->targetDirs[3].'/vendor/symfony/form/Extension/DependencyInjection/DependencyInjectionExtension.php';
include_once $this->targetDirs[3].'/vendor/symfony/form/ResolvedFormTypeFactoryInterface.php';
include_once $this->targetDirs[3].'/vendor/symfony/form/Extension/DataCollector/Proxy/ResolvedTypeFactoryDataCollectorProxy.php';
include_once $this->targetDirs[3].'/vendor/symfony/form/ResolvedFormTypeFactory.php';

return $this->privates['form.registry'] = new \Symfony\Component\Form\FormRegistry([0 => new \Symfony\Component\Form\Extension\DependencyInjection\DependencyInjectionExtension(new \Symfony\Component\DependencyInjection\Argument\ServiceLocator($this->getService, [
    'App\\Form\\AccountType' => ['privates', 'App\\Form\\AccountType', 'getAccountTypeService.php', true],
    'App\\Form\\CharpenteType' => ['privates', 'App\\Form\\CharpenteType', 'getCharpenteTypeService.php', true],
    'App\\Form\\ClimatisationType' => ['privates', 'App\\Form\\ClimatisationType', 'getClimatisationTypeService.php', true],
    'App\\Form\\CloisonType' => ['privates', 'App\\Form\\CloisonType', 'getCloisonTypeService.php', true],
    'App\\Form\\CloisonsType' => ['privates', 'App\\Form\\CloisonsType', 'getCloisonsTypeService.php', true],
    'App\\Form\\ContactType' => ['privates', 'App\\Form\\ContactType', 'getContactTypeService.php', true],
    'App\\Form\\CreateMemberType' => ['privates', 'App\\Form\\CreateMemberType', 'getCreateMemberTypeService.php', true],
    'App\\Form\\DomotiqueType' => ['privates', 'App\\Form\\DomotiqueType', 'getDomotiqueTypeService.php', true],
    'App\\Form\\ElectriciteType' => ['privates', 'App\\Form\\ElectriciteType', 'getElectriciteTypeService.php', true],
    'App\\Form\\ElevationType' => ['privates', 'App\\Form\\ElevationType', 'getElevationTypeService.php', true],
    'App\\Form\\EnduitType' => ['privates', 'App\\Form\\EnduitType', 'getEnduitTypeService.php', true],
    'App\\Form\\EscaliersType' => ['privates', 'App\\Form\\EscaliersType', 'getEscaliersTypeService.php', true],
    'App\\Form\\EtudeSolType' => ['privates', 'App\\Form\\EtudeSolType', 'getEtudeSolTypeService.php', true],
    'App\\Form\\EvacuationFumeesType' => ['privates', 'App\\Form\\EvacuationFumeesType', 'getEvacuationFumeesTypeService.php', true],
    'App\\Form\\ExcavationType' => ['privates', 'App\\Form\\ExcavationType', 'getExcavationTypeService.php', true],
    'App\\Form\\FondationType' => ['privates', 'App\\Form\\FondationType', 'getFondationTypeService.php', true],
    'App\\Form\\IsolationType' => ['privates', 'App\\Form\\IsolationType', 'getIsolationTypeService.php', true],
    'App\\Form\\MenuiserieType' => ['privates', 'App\\Form\\MenuiserieType', 'getMenuiserieTypeService.php', true],
    'App\\Form\\MenuiseriesIntType' => ['privates', 'App\\Form\\MenuiseriesIntType', 'getMenuiseriesIntTypeService.php', true],
    'App\\Form\\PlancherType' => ['privates', 'App\\Form\\PlancherType', 'getPlancherTypeService.php', true],
    'App\\Form\\PlomberieType' => ['privates', 'App\\Form\\PlomberieType', 'getPlomberieTypeService.php', true],
    'App\\Form\\PreparationEtAccesType' => ['privates', 'App\\Form\\PreparationEtAccesType', 'getPreparationEtAccesTypeService.php', true],
    'App\\Form\\ProjetType' => ['privates', 'App\\Form\\ProjetType', 'getProjetTypeService.php', true],
    'App\\Form\\RemoveUserType' => ['privates', 'App\\Form\\RemoveUserType', 'getRemoveUserTypeService.php', true],
    'App\\Form\\ResettingType' => ['privates', 'App\\Form\\ResettingType', 'getResettingTypeService.php', true],
    'App\\Form\\RevetementType' => ['privates', 'App\\Form\\RevetementType', 'getRevetementTypeService.php', true],
    'App\\Form\\SoubassementType' => ['privates', 'App\\Form\\SoubassementType', 'getSoubassementTypeService.php', true],
    'App\\Form\\ToitureType' => ['privates', 'App\\Form\\ToitureType', 'getToitureTypeService.php', true],
    'App\\Form\\UserType' => ['privates', 'App\\Form\\UserType', 'getUserTypeService.php', true],
    'App\\Form\\VentilationType' => ['privates', 'App\\Form\\VentilationType', 'getVentilationTypeService.php', true],
    'App\\Form\\VrdType' => ['privates', 'App\\Form\\VrdType', 'getVrdTypeService.php', true],
    'Symfony\\Bridge\\Doctrine\\Form\\Type\\EntityType' => ['privates', 'form.type.entity', 'getForm_Type_EntityService.php', true],
    'Symfony\\Component\\Form\\Extension\\Core\\Type\\ChoiceType' => ['privates', 'form.type.choice', 'getForm_Type_ChoiceService.php', true],
    'Symfony\\Component\\Form\\Extension\\Core\\Type\\FormType' => ['privates', 'form.type.form', 'getForm_Type_FormService.php', true],
]), ['Symfony\\Component\\Form\\Extension\\Core\\Type\\FormType' => new RewindableGenerator(function () {
    yield 0 => ($this->privates['form.type_extension.form.transformation_failure_handling'] ?? ($this->privates['form.type_extension.form.transformation_failure_handling'] = new \Symfony\Component\Form\Extension\Core\Type\TransformationFailureExtension(NULL)));
    yield 1 => ($this->privates['form.type_extension.form.http_foundation'] ?? $this->load('getForm_TypeExtension_Form_HttpFoundationService.php'));
    yield 2 => ($this->privates['form.type_extension.form.validator'] ?? $this->load('getForm_TypeExtension_Form_ValidatorService.php'));
    yield 3 => ($this->privates['form.type_extension.csrf'] ?? $this->load('getForm_TypeExtension_CsrfService.php'));
    yield 4 => ($this->privates['form.type_extension.form.data_collector'] ?? $this->load('getForm_TypeExtension_Form_DataCollectorService.php'));
}, 5), 'Symfony\\Component\\Form\\Extension\\Core\\Type\\RepeatedType' => new RewindableGenerator(function () {
    yield 0 => ($this->privates['form.type_extension.repeated.validator'] ?? ($this->privates['form.type_extension.repeated.validator'] = new \Symfony\Component\Form\Extension\Validator\Type\RepeatedTypeValidatorExtension()));
}, 1), 'Symfony\\Component\\Form\\Extension\\Core\\Type\\SubmitType' => new RewindableGenerator(function () {
    yield 0 => ($this->privates['form.type_extension.submit.validator'] ?? ($this->privates['form.type_extension.submit.validator'] = new \Symfony\Component\Form\Extension\Validator\Type\SubmitTypeValidatorExtension()));
}, 1)], new RewindableGenerator(function () {
    yield 0 => ($this->privates['form.type_guesser.validator'] ?? $this->load('getForm_TypeGuesser_ValidatorService.php'));
    yield 1 => ($this->privates['form.type_guesser.doctrine'] ?? $this->load('getForm_TypeGuesser_DoctrineService.php'));
}, 2))], new \Symfony\Component\Form\Extension\DataCollector\Proxy\ResolvedTypeFactoryDataCollectorProxy(new \Symfony\Component\Form\ResolvedFormTypeFactory(), ($this->privates['data_collector.form'] ?? $this->getDataCollector_FormService())));
